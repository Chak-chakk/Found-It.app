{"ast":null,"code":"import _slicedToArray from \"C:/Users/77762/Desktop/find-me.app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\77762\\\\Desktop\\\\find-me.app\\\\src\\\\backgroundBlock\\\\background.js\",\n  _s = $RefreshSig$();\nimport \"./background.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BackgroundBlock(_ref) {\n  _s();\n  var _this = this;\n  var icons = _ref.icons,\n    onClickHandler = _ref.onClickHandler;\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    hints = _useState2[0],\n    setHints = _useState2[1]; // Начальное количество подсказок\n\n  var onClick = function onClick(id) {\n    return function (e) {\n      onClickHandler(e, id);\n    };\n  };\n  var useHint = function useHint() {\n    if (hints > 0) {\n      var randomIcon = icons[Math.floor(Math.random() * icons.length)];\n      onClickHandler(null, randomIcon.id); // Добавляем случайный элемент в список найденных\n      setHints(function (prevHints) {\n        return prevHints - 1;\n      }); // Уменьшаем количество подсказок на 1\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container__background-image\",\n    children: [icons.map(function (elem) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"background-image__button\",\n        style: {\n          top: \"\".concat(elem.top, \"%\"),\n          left: \"\".concat(elem.left, \"%\")\n        },\n        onClick: onClick(elem.id),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: elem.picture,\n          alt: elem.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, _this)\n      }, elem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"background-image__hint-magnet\",\n      onClick: useHint,\n      disabled: hints === 0,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../image/magnit.png\",\n        alt: \"\\u043F\\u043E\\u0434\\u0441\\u043A\\u0430\\u0437\\u043A\\u0430 \\u043C\\u0430\\u0433\\u043D\\u0438\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"hint-magnet__quantity\",\n        children: hints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../image/background-3.jpg\",\n      className: \"background-image__desktop\",\n      alt: \"space image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../image/background-image-mobile.png\",\n      className: \"background-image__mobile\",\n      alt: \"space image mobile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(BackgroundBlock, \"XHZgG+DnBGSob3o9vL5fk/oLntw=\");\n_c = BackgroundBlock;\nvar _c;\n$RefreshReg$(_c, \"BackgroundBlock\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BackgroundBlock","_ref","_s","_this","icons","onClickHandler","_useState","_useState2","_slicedToArray","hints","setHints","onClick","id","e","useHint","randomIcon","Math","floor","random","length","prevHints","className","children","map","elem","style","top","concat","left","src","picture","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/77762/Desktop/find-me.app/src/backgroundBlock/background.js"],"sourcesContent":["import\"./background.css\"\r\nimport React, {useState} from \"react\"\r\n\r\nexport function BackgroundBlock({icons, onClickHandler}){\r\n    const [hints, setHints] = useState(1); // Начальное количество подсказок\r\n\r\n    const onClick = (id) => (e) =>{\r\n        onClickHandler(e, id);\r\n    }\r\n\r\n    const useHint = () =>{\r\n        if(hints > 0){\r\n            const randomIcon = icons[Math.floor(Math.random() * icons.length)];\r\n            onClickHandler(null, randomIcon.id); // Добавляем случайный элемент в список найденных\r\n            setHints((prevHints) => prevHints - 1); // Уменьшаем количество подсказок на 1\r\n        };\r\n    }\r\n\r\n    return(\r\n    <div className=\"main-container__background-image\">\r\n        {icons.map((elem) => {\r\n            return <button key={elem.id} className=\"background-image__button\" style={{top: `${elem.top}%`, left: `${elem.left}%`}}  onClick={onClick(elem.id)}>\r\n                <img src={elem.picture} alt={elem.alt}/>   \r\n            </button>\r\n        })}\r\n        <button type=\"button\" className=\"background-image__hint-magnet\" onClick={useHint}  disabled={hints === 0}>\r\n            <img src=\"../image/magnit.png\" alt=\"подсказка магнит\"></img>\r\n            <span className=\"hint-magnet__quantity\">{hints}</span>\r\n        </button>\r\n        <img src=\"../image/background-3.jpg\" className=\"background-image__desktop\" alt=\"space image\"></img>\r\n        <img src=\"../image/background-image-mobile.png\" className=\"background-image__mobile\" alt=\"space image mobile\"></img>\r\n    </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}